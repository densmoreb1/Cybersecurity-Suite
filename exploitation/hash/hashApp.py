import PySimpleGUI as sg
import hashlib

def hash(wordlist_location, hash_input):

    # algo = algo
    sg.cprint("Starting to crack. This may take some time.")

    with open(wordlist_location, 'r') as file:
        for line in file.readlines():
            hash_ob = hashlib.sha256(line.strip().encode())
            hashed_pass = hash_ob.hexdigest()
            if hashed_pass == hash_input:
                sg.cprint('Found cleartext password: ' + line.strip())
                found = True
        if not found:
            sg.cprint("Did not find any matching passwords")

sg.theme('Dark Grey 13')
sg.set_options(font='sans')

sg.popup("""Encryption is a good way to keep things secure.
It converts readable information to a hash that you can only crack if you have the\
passphrase and the right algorithm used.

For this demo, I am using SHA256.
""")

sg.popup("""We also need a wordlist to brute force what the passphrase is.\n
I have provided one called 'wordlist2.txt' in the exploitation folder.    
""")

sg.popup("""
The function I have written goes through all the words in the wordlist\
, encrypts it, and if the original matches the encrypted, that is the passphrase.
""")

layout = [

    [sg.Text("Enter the path to your wordlist")],
    [sg.Input(key='wordlist')],
    [sg.Text('Enter the hash')],
    [sg.Input(key='phrase')],
    [sg.Text('Found phrases')],
    [sg.Multiline(size=(50, 3), reroute_cprint=True, key='out', \
        reroute_stdout=False, auto_refresh=True, no_scrollbar=True)],
    [sg.B('Enter', bind_return_key=True)]
]

window = sg.Window('Hash Cracker', layout)
while True:
    event, values = window.read()
    if event == sg.WIN_CLOSED or event == 'Exit':
        break

    elif event == 'Enter':
       hash(values['wordlist'], values['phrase'])
    #    hash('/opt/wordlists/wordlist2.txt', '5030c5bd002de8713fef5daebd597620f5e8bcea31c603dccdfcdf502a57cc60')

window.close()
