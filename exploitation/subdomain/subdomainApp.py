from cracker import cracker
from queue import Queue
import PySimpleGUI as sg
import threading
import requests
import sys

def cracker(wordlist, ip):

    # ip = input("ip: ")
    # wordlist = input("path: ")
    try:
        sub_list = open(wordlist).read()
    except:
        sg.cprint('invalid path')
        sys.exit()

    subdoms = sub_list.splitlines()

    q = Queue()
    threads = 50

    def request(q):
        while True:
            word = q.get()

            try:
                response = requests.get(f"http://{ip}/{word}")
            except:
                pass
            else:
                if response.status_code != 404:
                    sg.cprint(f"{response.status_code} {word}")
            
            q.task_done()

    sg.print('----------Starting enumeration----------')

    for i in range(threads):
        worker = threading.Thread(target=request, args=(q,))
        worker.start()

    for dom in range(len(subdoms)):
        q.put(subdoms[dom])
    

sg.theme('Dark Grey 13')
sg.set_options(font='sans')

sg.popup(""" 
Welcome the subdomain enumerator \n
This app allows for you to send a word\
list to a function that will run through all of the words in the word list.\
It will return the ones that are successful.

I have provided a wordlist called 'common.txt' in the exploitation folder.
""")

sg.popup(""" 
This is similar to scanning a network. Be sure to have permission to run this script on websites.

Luckily we can use tryhackme to scan one of their websites.

Go to this link and go to task 2 and click start machine
https://tryhackme.com/room/ffuf
""")

layout = [
    [sg.Text('Enter the ip address of the attack: ', )],
    [sg.Input(key='ip')],
    [sg.Text('Enter the path to your word list', )],
    [sg.Input(key='wordlist')],
    [sg.Text('Found directories')],
    [sg.Multiline(size=(50, 3), reroute_cprint=True, key='out', \
        reroute_stdout=False, auto_refresh=True, no_scrollbar=True)],
    [sg.B('Enter', bind_return_key=True)]
]

window = sg.Window('Enumeration', layout)
while True:
    event, values = window.read()
    if event == sg.WIN_CLOSED or event == 'Exit':
        break

    elif event == 'Enter':
        cracker(values['wordlist'], values['ip'])


window.close()
